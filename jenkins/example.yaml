apiVersion: template.openshift.io/v1
kind: Template
labels:
  demo: coolstore-microservice
metadata:
  annotations:
    description: inventory template
    iconClass: icon-java
    tags: microservice,jboss,spring
  name: inventory-updated-deployments
objects:
  - apiVersion: v1
    groupNames: null
    kind: RoleBinding
    metadata:
      name: default_edit
    roleRef:
      name: view
    subjects:
      - kind: ServiceAccount
        name: default


  # Inventory Service
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: inventory
      labels:
        app: inventory
        uses-database: "true"
    spec:
      replicas: 1
      selector:
        deploymentconfig: inventory
      strategy:
        resources: {}
        type: Recreate
      template:
        metadata:
          labels:
            app: inventory
            deploymentconfig: inventory
          name: inventory
        spec:
          containers:
            - env:
                - name: OPENSHIFT_KUBE_PING_LABELS
                  value: application=inventory
                - name: OPENSHIFT_KUBE_PING_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: MQ_CLUSTER_PASSWORD
                  value: 7mzX0pLV03
                - name: JGROUPS_CLUSTER_PASSWORD
                  value: CqUo3fYDTv
                - name: AUTO_DEPLOY_EXPLODED
                  value: "false"
                - name: DB_SERVICE_PREFIX_MAPPING
                  value: inventory-postgresql=DB
                - name: DB_JNDI
                  value: java:jboss/datasources/InventoryDS
                - name: DB_USERNAME
                  value: ${INVENTORY_DB_USERNAME}
                - name: DB_PASSWORD
                  value: ${INVENTORY_DB_PASSWORD}
                - name: DB_DATABASE
                  value: inventorydb
              image: inventory
              imagePullPolicy: Always
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /opt/eap/bin/jboss-cli.sh
                      - -c
                      - :shutdown(timeout=60)
              livenessProbe:
                failureThreshold: 10
                httpGet:
                  path: /api/availability/1
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: inventory
              ports:
                - containerPort: 8778
                  name: jolokia
                  protocol: TCP
                - containerPort: 8080
                  name: http
                  protocol: TCP
                - containerPort: 8888
                  name: ping
                  protocol: TCP
              readinessProbe:
                failureThreshold: 10
                httpGet:
                  path: /api/availability/1
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 1
                  memory: 2Gi
                requests:
                  cpu: 100m
                  memory: 1Gi
              terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 75
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - inventory
            from:
              kind: ImageStreamTag
              name: inventory:${APP_VERSION}
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service.alpha.openshift.io/dependencies: '[{"name":"inventory-postgresql","namespace":"","kind":"Service"}]'
      labels:
        app: inventory
      name: inventory
    spec:
      ports:
        - port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: inventory
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: inventory
      name: inventory
    spec:
      host: inventory-${HOSTNAME_SUFFIX}
      to:
        kind: Service
        name: inventory
        weight: 100
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: inventory-postgresql
      labels:
        app: inventory
        comp-type: database
    spec:
      replicas: 1
      selector:
        deploymentconfig: inventory-postgresql
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: inventory
            comp-type: database
            deploymentconfig: inventory-postgresql
          name: inventory-postgresql
        spec:
          containers:
            - env:
                - name: POSTGRESQL_USER
                  value: ${INVENTORY_DB_USERNAME}
                - name: POSTGRESQL_PASSWORD
                  value: ${INVENTORY_DB_PASSWORD}
                - name: POSTGRESQL_DATABASE
                  value: inventorydb
              image: postgresql
              imagePullPolicy: Always
              name: inventory-postgresql
              ports:
                - containerPort: 5432
                  protocol: TCP
              volumeMounts:
                - mountPath: /var/lib/pgsql/data
                  name: inventory-postgresql-data
              livenessProbe:
                initialDelaySeconds: 30
                failureThreshold: 10
                periodSeconds: 10
                tcpSocket:
                  port: 5432
                timeoutSeconds: 1
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - -i
                    - -c
                    - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
                initialDelaySeconds: 5
                timeoutSeconds: 1
                failureThreshold: 10
                periodSeconds: 5
              resources:
                limits:
                  cpu: 500m
                  memory: 512Mi
                requests:
                  cpu: 50m
                  memory: 256Mi
          terminationGracePeriodSeconds: 60
          volumes:
            - name: inventory-postgresql-data
              persistentVolumeClaim:
                claimName: inventory-postgresql-pv
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - inventory-postgresql
            from:
              kind: ImageStreamTag
              name: postgresql:9.6
              namespace: openshift
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: inventory
      name: inventory-postgresql
    spec:
      ports:
        - port: 5432
          targetPort: 5432
      selector:
        deploymentconfig: inventory-postgresql
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: inventory
      name: inventory-postgresql-pv
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi